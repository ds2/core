buildscript {
        repositories {
            mavenLocal()
            jcenter()
        }
        dependencies {
            classpath 'ds2.gradle.plugins.gitinfo:gradle-git-info-plugin:0.0.1-SNAPSHOT'
        }
}

plugins {
    id "com.jfrog.bintray" version '1.8.2'
    id 'net.researchgate.release' version '2.6.0'
    id 'ds2.base' version '0.0.9'
    id "com.github.hierynomus.license" version "0.14.0"
}

ext.scmBranchName=""
ext.revisionId=""

allprojects {
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'ds2.base'
    apply plugin: "com.github.hierynomus.license"
    //apply plugin: 'ds2.gitinfo'

    group = 'ds2.oss.core'

    base {
        javaVersion = JavaVersion.VERSION_1_8
    }
//    gitInfo(){
//        countCommitId=10
//        generatePropertiesIn = ""+project.buildDir+"/hello.properties"
//        branchPropertyName="scmBranchName"
//        revisionPropertyName = "revisionId"
//    }
    repositories {
        mavenLocal()
        jcenter()
        maven { url "https://maven.java.net/content/groups/promoted" }
        mavenCentral()
    }

    bintray {
        user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
        key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
        pkg {
            repo = 'ds2-oss'
            name = 'Core'
            licenses = ['Apache-2.0']
            vcsUrl = 'https://bitbucket.org/lexxy23/ds2-oss-core.git'
        }
        publications = ['core']
    }
    release {
        git {
            requireBranch = 'release/0.1'
        }
    }
    license {
        ext.year = Calendar.getInstance().get(Calendar.YEAR)
        ext.name = 'DS/2'
        ext.email = 'dstrauss@ds-2.de'
        header rootProject.file('aslv2_header.txt')
        strictCheck true
        includes(["**/*.java", "**/*.properties"])
        excludes([ "**/*Test.java"])
        mapping {
            java = 'SLASHSTAR_STYLE'
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    publishing {
        repositories {
            maven {
                url "$buildDir/repo"
            }
        }
        publications {
            core(MavenPublication) {
                from components.java
                artifact createSourceJar {
                    classifier "sources"
                }
                artifact createJavadocJar {
                    classifier "javadoc"
                }
            }
        }
    }

}

beforeReleaseBuild.dependsOn project.tasks.getByName('license')
afterReleaseBuild.dependsOn bintrayUpload

bintray {
    publications = []
    configurations = []
}
