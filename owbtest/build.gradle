description = 'DS/2 OSS Core OpenWebBeans Injection Test'

def OWB_VERSION='2.0.23'

dependencies {
    implementation project(':ds2-oss-core-api')
    runtimeOnly project(':ds2-oss-core-base')
    testImplementation  project(':ds2-oss-core-statics')
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
    implementation(group: 'jakarta.platform', name: 'jakarta.jakartaee-api', version: '8.0.0')
    testImplementation  "org.apache.openwebbeans:openwebbeans-ee:${OWB_VERSION}"
    testImplementation  "org.apache.openwebbeans:openwebbeans-spi:${OWB_VERSION}"
    testImplementation  "org.apache.openwebbeans:openwebbeans-impl:${OWB_VERSION}"
    testImplementation "org.apache.openwebbeans:openwebbeans-junit5:${OWB_VERSION}"
    testImplementation  'org.slf4j:slf4j-api:1.7.32'
    testRuntime group: 'ch.qos.logback', name: 'logback-classic', version: project.ext.logbackVersion
}

test {
    //maxHeapSize="1024m"
    //jvmArgs '-XX:MaxPermSize=256m'
    testLogging.showStandardStreams = true
    onOutput { descriptor, event ->
        logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
    }
    systemProperty "ds2.app.sec.home", "target/dummySec"
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        exceptionFormat "full"
        showCauses true
        showExceptions true
        showStackTraces true
    }
}

bintray {
    publications = []
    configurations = []
}
